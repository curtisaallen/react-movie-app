{"version":3,"sources":["components/images/reactMovie_logo.08494abf.png","components/images/tmdb_logo.27b65cb4.svg","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/elements/SearchBar.js","components/elements/MovieThumb.js","components/elements/Grid.js","components/elements/LoadMoreBtn.js","components/elements/Spinner.js","components/Home.js","components/elements/NotFound.js","components/elements/MovieHero.js","helpers.js","components/elements/MovieInfoBar.js","components/elements/CastThumb.js","components/elements/CrewThumb.js","components/Movie.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","href","tmdb","API_URL","API_KEY","IMAGE_BASE_URL","POPULAR_URL","HERO_IMG","StyledHeroImage","styled","div","props","image","HeroImage","herodata","backdrop_path","original_title","overview","SearchBar","state","searchTerm","searchMovie","event","search","setState","target","value","type","placeholder","onChange","this","React","Component","MovieThumb","movie","id","poster_path","Grid","movies","title","map","i","key","LoadMoreBtn","click","onClick","Spinner","Home","heroImage","loading","currentPage","totalPages","gridTitle","fetchItems","endpoint","a","fetch","response","json","result","results","page","total_pages","searchMovies","loadMoreItems","NotFound","MovieHero","directors","vote_average","item","name","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","data","aria-hidden","time","hours","Math","floor","mins","calcTime","runtime","budget","revenue","CastThumb","cast","profile_path","character","CrewThumb","crew","job","Movie","casts","credits","filter","member","movieId","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d184685b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.27b65cb4.27b65cb4.svg\";","import React from 'react';\nimport { Link } from \"@reach/router\";\nimport '../styles/Header.css';\nimport logo from '../images/reactMovie_logo.08494abf.png';\nimport tmdb from '../images/tmdb_logo.27b65cb4.svg';\n\nconst Header = () => (\n<div className=\"header\">\n    <div className=\"header-content\">\n        <Link to=\"/\">\n            <img src={logo} alt=\"logo\" className=\"logo\" />\n        </Link>\n        <a href=\"https://www.themoviedb.org\">\n            <img src={tmdb} alt=\"tmdb logo\" className=\"logo-tmdb\" />\n        </a>\n    </div>\n</div>\n)\n\nexport default Header;\n","const API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2c408d06ea3bb139158657bedc6d2dc8';\n\n// 019e8f375549e0bbd4a4191862ebc88f\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nconst POPULAR_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n\nconst HERO_IMG = `${IMAGE_BASE_URL}${BACKDROP_SIZE}`;\n\nconst MOVIE_DETAILS = (id) => {\n    return `${API_URL}movie/${id}?api_key=${API_KEY}&append_to_response=videos,credits`;\n}\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, POPULAR_URL, HERO_IMG, MOVIE_DETAILS };","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    position: relative;\n    margin: 0px auto;\n    background: rgba(0, 0, 0, 0.7);\n    border-radius: 20px;\n}\n.movieinfo-thumb {\n  width: 300px;\n  float: left;\n}\n.movieinfo-thumb img {\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: all 0.3s ease 0s;\n  border-radius: 20px;\n}\n.movieinfo-text {\n  font-family: Arial, Helvetica, sans-serif;\n  color: rgb(255, 255, 255);\n  padding: 40px;\n  overflow: hidden;\n}\n.movieinfo-text h1 {\n  font-family: Abel, sans-serif;\n  font-size: 48px;\n  margin: 0px;\n}\n.movieinfo-text h3 {\n  font-size: 16px;\n  line-height: 0;\n  margin-top: 30px;\n}\n.movieinfo-text p {\n  font-family: Abel, sans-serif;\n  font-size: 18px;\n  line-height: 26px;\n}\n.rating-director {\n  display: flex;\n  -webkit-box-pack: start;\n  justify-content: flex-start;\n}\n.movieinfo-text h3 {\n  font-size: 16px;\n  line-height: 0;\n  margin-top: 30px;\n}\n.score {\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  justify-content: center;\n  width: 35px;\n  height: 35px;\n  color: rgb(0, 0, 0);\n  font-weight: 800;\n  background: rgb(255, 255, 255);\n  border-radius: 25px;\n  margin: 0px;\n}\n.director {\n  margin: 0px 0px 0px 40px;\n}\n.director p {\n  margin: 0px;\n}\n.movieinfo-hero {\n  padding: 4em 0 0 0;\n}\n`;","import React from 'react';\nimport { HERO_IMG } from '../../config';\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\nconst HeroImage = ({ herodata }) => (\n    <StyledHeroImage image={`${HERO_IMG}${herodata.backdrop_path}`}>\n       <div className=\"heroimage-content\">\n            <div className=\"heroimage-text\">\n                <h1>{herodata.original_title}</h1>\n                <p>{herodata.overview}</p>\n            </div>\n        </div>      \n    </StyledHeroImage>   \n)\n\nexport default HeroImage;","import React from 'react';\nimport '../styles/SearchBar.css';\n\nclass SearchBar extends React.Component {\n    state = {\n        searchTerm: ''\n    }\n    searchMovie = (event) => {\n        const {search} = this.props;  \n        this.setState({\n            searchTerm: event.target.value\n        })\n        search(event.target.value)\n    }\n    render() {\n        return (\n            <div className=\"search-wrap\">\n                <div className=\"search-col\">\n                    <span className=\"fa fa-search fa-2x fa-search\"></span>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Search Movie\"\n                        onChange={this.searchMovie}\n                        value={this.state.searchTerm}\n                     />\n                </div>\n            </div>\n        )\n    }\n}\nexport default SearchBar;","import React from 'react';\nimport { Link } from \"@reach/router\";\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\nconst NoImage = 'https://dummyimage.com/224x336/000/ffffff&text=NO+IMAGE';\n\nconst MovieThumb = ({movie}) => (\n<div className=\"grid-element\">\n    <div className=\"grid-item\">\n        <Link to={`details/${movie.id}`}>\n            <img className=\"clickable\" src={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage} alt=\"moviethumb\" />\n        </Link>\n    </div>\n</div>\n)\n\nexport default MovieThumb;","import React from 'react';\nimport '../styles/Grid.css';\nimport MovieThumb from '../elements/MovieThumb';\n\nconst Grid = ({movies, title}) => (\n<div className=\"grid-wrap\">\n   <h1>{title}</h1>\n   <div className=\"grid-container\">\n    {movies.map((movie, i) => {\n        return <MovieThumb movie={movie} key={i} />\n    })}\n   </div>\n</div>\n)\n\nexport default Grid;","import React from 'react';\n\nconst LoadMoreBtn = ({click}) => <button onClick={click} className=\"btn\">Load More</button>\n\nexport default LoadMoreBtn;","import React from 'react';\nimport '../styles/Spinner.css';\n\nconst Spinner = () => <div className=\"loader\"></div>\n\nexport default Spinner;","import React from 'react';\n\nimport { API_URL, API_KEY, POPULAR_URL } from '../config';\nimport './styles/Home.css';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\nclass Home extends React.Component {\n    state = {\n        movies: [],\n        heroImage: null,\n        loading: false,\n        search: false,\n        currentPage: 0,\n        totalPages: 0,\n        searchTerm: '',\n        gridTitle: 'Popular Movies'\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        this.fetchItems(POPULAR_URL);\n    }\n\n    fetchItems = async (endpoint) => {\n        const response = await fetch(endpoint);\n        const result = await response.json();\n        this.setState({\n            movies: [...this.state.movies, ...result.results],\n            heroImage: this.state.heroImage || result.results[0],\n            loading: false,\n            search: true,\n            currentPage: result.page,\n            totalPages: result.total_pages\n        });    \n    } \n\n    searchMovies = async (search) => {\n        if(search !== ''){\n            const endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${search}`;\n            const response = await fetch(endpoint);\n            const result = await response.json();\n            this.setState({\n                search: false,\n                movies: result.results,\n                gridTitle: 'Search Movies'\n            });\n        }\n\n        if(search === '') {\n            this.setState({ movies: [], gridTitle: 'Popular Movies', search: true }); \n            this.fetchItems(POPULAR_URL); \n        } \n    }\n\n    loadMoreItems = () => { \n       const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n       this.fetchItems(endpoint);\n    }\n\n    render() {\n        return (\n        <>\n            {this.state.heroImage && (\n              <div>\n                 <HeroImage herodata={this.state.heroImage} />\n              </div>\n            )}\n            {this.state.movies && (\n                <SearchBar search={this.searchMovies} />\n            )}\n            {this.state.movies && (\n                <Grid title={this.state.gridTitle} movies={this.state.movies} />\n            )}\n            {this.state.search && (\n                <LoadMoreBtn click={this.loadMoreItems} />\n            )}\n            {this.state.loading && ( \n                <Spinner />\n            )}\n        </>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nconst NotFound = () => <div className=\"grid-wrap center-text\"><h1>Sorry, nothing here.</h1></div>\n\nexport default NotFound;","import React from 'react';\nimport { HERO_IMG, IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\nconst MovieHero = ({ herodata, directors }) => (\n    <StyledHeroImage image={`${HERO_IMG}${herodata.backdrop_path}`}>\n        <div className=\"movieinfo-hero\" >\n        <div className=\"movieinfo-content\">\n            <div className=\"movieinfo-thumb\">\n                <div className=\"sc-htoDjs cxazkU\">\n                    <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${herodata.poster_path}`} alt={`${herodata.original_title} movie poster`} />\n                </div>\n            </div>\n            <div className=\"movieinfo-text\">\n                <h1>{herodata.original_title}</h1>\n                <h3>PLOT</h3>\n                <p>{herodata.overview}</p>\n                <div className=\"rating-director\">\n                    <div>\n                        <h3>IMDB RATING</h3>\n                        <div className=\"score\">{herodata.vote_average}</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR</h3>\n                        {directors.map((item, i) => <p key={i}> {item.name} </p>)}\n                    </div>\n                </div>\n            </div>\n        </div> \n        </div>   \n    </StyledHeroImage>   \n)\n\nexport default MovieHero;","export const calcTime = (time) => {\n    const hours = Math.floor(time / 60);\n    const mins = time % 60;\n    return `${hours}h ${mins}m`;\n}\n\nexport const convertMoney = (money) => {\n    var formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    });\n    return formatter.format(money);\n} ","import React from 'react';\nimport '../styles/MovieInfoBar.css';\n\nimport {calcTime, convertMoney} from '../../helpers';\n\nconst MovieInfoBar = ({data}) => (\n    <div className=\"movieinfobar-wrap\">\n        <div className=\"movieinfobar-content\">\n            <div className=\"movieinfobar-content-col\">\n                <span aria-hidden=\"true\" className=\"fa fa-clock-o fa-2x fa-time\"></span>\n                <span className=\"movieinfobar-info\">Running time: {calcTime(data.runtime)}</span>\n            </div>\n            <div className=\"movieinfobar-content-col\">\n                <span aria-hidden=\"true\" className=\"fa fa-money fa-2x fa-budget\"></span>\n                <span className=\"movieinfobar-info\">Budget: {convertMoney(data.budget)}</span>\n            </div>\n            <div className=\"movieinfobar-content-col\">\n                <span aria-hidden=\"true\" className=\"fa fa-ticket fa-2x fa-revenue\"></span>\n                <span className=\"movieinfobar-info\">Revenue: {convertMoney(data.revenue)}</span>\n            </div>\n        </div>\n    </div>\n) \n\nexport default MovieInfoBar;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\nconst NoImage = 'https://dummyimage.com/224x336/000/ffffff&text=NO+IMAGE';\n\nconst CastThumb = ({cast}) => (\n<div className=\"grid-element-actor\">\n    <div className=\"grid-item-actor\">\n        <img  src={cast.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${cast.profile_path}` : NoImage} alt={cast.name} />\n        <span className=\"actor-name\">{cast.name}</span>\n        <span className=\"actor-character\">{cast.character}</span>\n    </div>\n</div>\n)\n\nexport default CastThumb;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\nconst NoImage = 'https://dummyimage.com/224x336/000/ffffff&text=NO+IMAGE';\n\nconst CrewThumb = ({crew}) => (\n<div className=\"grid-element-actor\">\n    <div className=\"grid-item-actor\">\n        <img  src={crew.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${crew.profile_path}` : NoImage} alt={crew.name} />\n        <span className=\"actor-name\">{crew.name}</span>\n        <span className=\"actor-character\">{crew.job}</span>\n    </div>\n</div>\n)\n\nexport default CrewThumb;","import React from 'react';\nimport {MOVIE_DETAILS } from '../config';\nimport './styles/Movie.css';\nimport MovieHero from './elements/MovieHero';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport CastThumb from './elements/CastThumb';\nimport CrewThumb from './elements/CrewThumb';\nimport Spinner from './elements/Spinner';\n\nclass Movie extends React.Component {\n    state = {\n        movie: null,\n        casts: null,\n        crew: null,\n        directors: [],\n        heroImage: null,\n        loading: true,\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        this.fetchItems(MOVIE_DETAILS(this.props.movieId));\n    }\n\n    fetchItems = async (endpoint) => {\n            const response = await fetch(endpoint);\n            const result = await response.json();\n            const directors = result.credits.crew.filter((member) => member.job === \"Director\");   \n            this.setState({\n                 movie: result,\n                 heroImage: this.state.heroImage || result,\n                 loading: false,\n                 directors:  directors,\n                 casts: result.credits.cast,\n                 crew: result.credits.crew\n             });\n        } \n\n    render() {\n        return (\n            <>\n           {this.state.heroImage && (\n                <div>\n                    <MovieHero herodata={this.state.heroImage} directors={this.state.directors} />\n                </div>\n            )}\n            {this.state.movie && (\n                <MovieInfoBar data={this.state.movie} />\n            )}\n            {this.state.casts && (\n                <div className=\"grid-wrap\">\n                    <h1>Actors</h1>\n                    <div className=\"cast-wrap\">\n                        {this.state.casts.map((cast, i) => {\n                            return <CastThumb cast={cast} key={i} /> \n                        })}\n                    </div>\n                </div>\n            )}\n            {this.state.crew && (\n                <div className=\"grid-wrap\">\n                    <h1>Crew</h1>\n                    <div className=\"cast-wrap\">\n                        {this.state.crew.map((crew, i) => {\n                            return <CrewThumb crew={crew} key={i} /> \n                        })}\n                    </div>\n                </div>\n            )}\n            {this.state.loading && ( \n                <Spinner />\n            )}\n            </>\n        );\n    }\n}\n\nexport default Movie;\n\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport NotFound from './elements/NotFound';\nimport Movie from './Movie';\n\nconst App = () => (\n  <div>\n  <Header />\n  <Router>\n     <Home path=\"/\" />\n     <Movie path=\"details/:movieId\" />\n     <NotFound default />\n  </Router>\n</div>\n)\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}